package simulatorInterface;

import financialmarketsimulator.exception.StockAlreadyExistsException;
import financialmarketsimulator.market.MarketEntryAttempt;
import financialmarketsimulator.market.MarketEntryAttemptBook;
import financialmarketsimulator.marketData.MatchedMarketEntryAttempt;
import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.Stack;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sun.security.x509.AttributeNameEnumeration;

/**
 * @author Grape <cos301.mainproject.grape@gmail.com>
 */
public class FMSimulator extends javax.swing.JFrame {

    private FinancialMarketStockExchange fmse = new FinancialMarketStockExchange();
    private Object[][] bids;
    private Object[][] offers;
    private Object[][] matched;

    /**
     * Creates new form FMSimulator
     */
    public FMSimulator() {
        initComponents();
        String[] rowNames = {"Market Entity", "Shares", "Price"};
        bids = new Object[0][3];
        offers = new Object[0][3];
        matched = new Object[0][3];

        OffersTableTest.setModel(new DefaultTableModel(bids, rowNames));
        BidsTableTest.setModel(new DefaultTableModel(offers, rowNames));
        MatchedTableTest.setModel(new DefaultTableModel(matched, rowNames));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Offers2 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        Offers4 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        Offers5 = new javax.swing.JTable();
        label4 = new java.awt.Label();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        jPanel7 = new javax.swing.JPanel();
        btnBid = new javax.swing.JButton();
        txtNumShares = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxStocks = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cbxMarketType = new javax.swing.JComboBox();
        btnOffer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMarketEntityID = new javax.swing.JTextField();
        label8 = new java.awt.Label();
        jPanel8 = new javax.swing.JPanel();
        btnMarketQuote = new javax.swing.JButton();
        btnMarketDepth = new javax.swing.JButton();
        btnMarketMatchedAttempt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        txtUpdateClosePrice = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        txtUpdateIndex = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtStockName = new javax.swing.JTextField();
        txtBasePrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPriceVarianceBP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtStandardDeviation = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtStandardFactor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMinInterval = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMaxInterval = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cbxMinNumberOfShares = new javax.swing.JSpinner();
        cbxMaxNumberOfShares = new javax.swing.JSpinner();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        BidsTableTest = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        MatchedTableTest = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        OffersTableTest = new javax.swing.JTable();
        label5 = new java.awt.Label();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        jPanel10 = new javax.swing.JPanel();
        btnBidTest = new javax.swing.JButton();
        txtNumShares1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cbxStocks1 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtPrice1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cbxMarketType1 = new javax.swing.JComboBox();
        btnOfferTest = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtMarketEntityID1 = new javax.swing.JTextField();
        label11 = new java.awt.Label();
        jPanel11 = new javax.swing.JPanel();
        btnMarketQuote1 = new javax.swing.JButton();
        btnMarketDepth1 = new javax.swing.JButton();
        btnMarketMatchedAttempt1 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 255, 255));
        jTabbedPane1.setName("Financial Market Simulator"); // NOI18N

        Offers2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Offers2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Offers2);

        Offers4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Offers4.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(Offers4);

        Offers5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Offers5.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(Offers5);

        label4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label4.setText("Market Attempt");

        label6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label6.setText("Offers");

        label7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label7.setText("Matched");

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnBid.setBackground(new java.awt.Color(0, 204, 204));
        btnBid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBid.setText("Bid");
        btnBid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBidMouseClicked(evt);
            }
        });
        btnBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBidActionPerformed(evt);
            }
        });

        txtNumShares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumSharesActionPerformed(evt);
            }
        });
        txtNumShares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumSharesKeyTyped(evt);
            }
        });

        jLabel9.setText("Stock ");

        cbxStocks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Shares");

        jLabel11.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        jLabel12.setText("Type");

        cbxMarketType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MARKET", "LIMIT" }));
        cbxMarketType.setToolTipText("select a market type");

        btnOffer.setBackground(new java.awt.Color(0, 204, 204));
        btnOffer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOffer.setText("Offer");
        btnOffer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOfferMouseClicked(evt);
            }
        });
        btnOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOfferActionPerformed(evt);
            }
        });

        jLabel2.setText("Market Entity ID");

        txtMarketEntityID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarketEntityIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel12)
                        .addComponent(cbxStocks, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                            .addComponent(btnBid, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                            .addComponent(btnOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11)
                    .addComponent(jLabel2)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMarketEntityID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNumShares, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cbxMarketType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxStocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMarketEntityID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(2, 2, 2)
                .addComponent(txtNumShares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxMarketType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBid)
                    .addComponent(btnOffer))
                .addGap(25, 25, 25))
        );

        label8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label8.setText("Bids");

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnMarketQuote.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketQuote.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketQuote.setText("Market Quote");

        btnMarketDepth.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketDepth.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketDepth.setText("Market Depth");

        btnMarketMatchedAttempt.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketMatchedAttempt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketMatchedAttempt.setText("Market Matched Attempt");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMarketMatchedAttempt, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
            .addComponent(btnMarketDepth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnMarketQuote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnMarketQuote)
                .addGap(18, 18, 18)
                .addComponent(btnMarketDepth)
                .addGap(18, 18, 18)
                .addComponent(btnMarketMatchedAttempt)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1430, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6)))
                .addGap(576, 576, 576))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2721, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1199, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 14, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 14, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Order List", jPanel2);

        jButton11.setBackground(new java.awt.Color(51, 255, 51));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton11.setText("Update Close Price");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        txtUpdateClosePrice.setBackground(new java.awt.Color(204, 255, 204));
        txtUpdateClosePrice.setToolTipText("enter value");
        txtUpdateClosePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUpdateClosePriceKeyTyped(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(51, 255, 51));
        jButton12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton12.setText("Update Index");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });

        txtUpdateIndex.setBackground(new java.awt.Color(204, 255, 204));
        txtUpdateIndex.setToolTipText("enter value");
        txtUpdateIndex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUpdateIndexKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpdateClosePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpdateIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(2548, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUpdateClosePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addGap(40, 40, 40)
                .addComponent(txtUpdateIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap(1050, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Exchange Data", jPanel3);

        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock", "Base Price", "Price Variance", "Min no. of shares", "Max no. of shares", "Std Deviation", "Std factor", "Min interval", "Max interval", "Length"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable1);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Stock");

        txtStockName.setBackground(new java.awt.Color(153, 255, 255));
        txtStockName.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N

        txtBasePrice.setBackground(new java.awt.Color(153, 255, 255));
        txtBasePrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtBasePrice.setText("68.2");
        txtBasePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBasePriceKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 255));
        jLabel3.setText("Base Price");

        txtPriceVarianceBP.setBackground(new java.awt.Color(153, 255, 255));
        txtPriceVarianceBP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtPriceVarianceBP.setText("1000");
        txtPriceVarianceBP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceVarianceBPKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 255));
        jLabel4.setText("Price Variance BP");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 255));
        jLabel5.setText("Min no. of Shares");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 255));
        jLabel6.setText("Max no. of Shares");

        txtStandardDeviation.setBackground(new java.awt.Color(153, 255, 255));
        txtStandardDeviation.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtStandardDeviation.setText("1");
        txtStandardDeviation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStandardDeviationKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 255));
        jLabel7.setText("Standard Deviation");

        txtStandardFactor.setBackground(new java.awt.Color(153, 255, 255));
        txtStandardFactor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtStandardFactor.setText("1");
        txtStandardFactor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStandardFactorKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 255));
        jLabel8.setText("Standard Factor");

        txtMinInterval.setBackground(new java.awt.Color(153, 255, 255));
        txtMinInterval.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtMinInterval.setText("500");
        txtMinInterval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinIntervalKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 204, 255));
        jLabel13.setText("Minimum Interval");

        txtMaxInterval.setBackground(new java.awt.Color(153, 255, 255));
        txtMaxInterval.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtMaxInterval.setText("2000");
        txtMaxInterval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMaxIntervalKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 204, 255));
        jLabel14.setText("Maximum Interval");

        txtLength.setBackground(new java.awt.Color(153, 255, 255));
        txtLength.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtLength.setText("60");
        txtLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLengthKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 204, 255));
        jLabel15.setText("Length");

        cbxMinNumberOfShares.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbxMinNumberOfShares.setModel(new javax.swing.SpinnerNumberModel(1000, 0, 1000000000, 100));
        cbxMinNumberOfShares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxMinNumberOfSharesKeyTyped(evt);
            }
        });

        cbxMaxNumberOfShares.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbxMaxNumberOfShares.setModel(new javax.swing.SpinnerNumberModel(1000, 0, 1000000000, 100));
        cbxMaxNumberOfShares.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxMaxNumberOfSharesKeyTyped(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateMouseClicked(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 204, 204));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setText("Delete");

        btnStop.setBackground(new java.awt.Color(255, 0, 51));
        btnStop.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnStop.setText("Stop");
        btnStop.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnStart.setBackground(new java.awt.Color(0, 204, 0));
        btnStart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnStart.setText("Start");
        btnStart.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxMinNumberOfShares, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPriceVarianceBP, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbxMaxNumberOfShares, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addComponent(jLabel15)
                                        .addComponent(txtLength, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtStandardDeviation, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtStandardFactor, javax.swing.GroupLayout.Alignment.TRAILING))))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13)
                            .addComponent(txtMinInterval))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMaxInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnCreate))
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStandardDeviation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStandardFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMinInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaxInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMaxNumberOfShares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxMinNumberOfShares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPriceVarianceBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(btnCreate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1395, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap(537, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Market Simulator", jPanel1);

        jTabbedPane2.setBackground(new java.awt.Color(204, 255, 255));
        jTabbedPane2.setName("Financial Market Simulator"); // NOI18N

        BidsTableTest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BidsTableTest.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(BidsTableTest);

        MatchedTableTest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MatchedTableTest.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(MatchedTableTest);

        OffersTableTest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Market Entity", "Shares", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OffersTableTest.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(OffersTableTest);

        label5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label5.setText("Market Attempt");

        label9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label9.setText("Offers");

        label10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label10.setText("Matched");

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));
        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnBidTest.setBackground(new java.awt.Color(0, 204, 204));
        btnBidTest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBidTest.setText("Bid");
        btnBidTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBidTestMouseClicked(evt);
            }
        });
        btnBidTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBidTestActionPerformed(evt);
            }
        });

        txtNumShares1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumShares1ActionPerformed(evt);
            }
        });
        txtNumShares1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumShares1KeyTyped(evt);
            }
        });

        jLabel16.setText("Stock ");

        cbxStocks1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FBK", "ANG", "YHO", "GGL", "GMS", "BMW", "ONX", " " }));
        cbxStocks1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxStocks1ItemStateChanged(evt);
            }
        });

        jLabel17.setText("Shares");

        jLabel18.setText("Price");

        txtPrice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrice1ActionPerformed(evt);
            }
        });
        txtPrice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrice1KeyTyped(evt);
            }
        });

        jLabel19.setText("Type");

        cbxMarketType1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MARKET", "LIMIT" }));
        cbxMarketType1.setToolTipText("select a market type");

        btnOfferTest.setBackground(new java.awt.Color(0, 204, 204));
        btnOfferTest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOfferTest.setText("Offer");
        btnOfferTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOfferTestMouseClicked(evt);
            }
        });
        btnOfferTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOfferTestActionPerformed(evt);
            }
        });

        jLabel20.setText("Market Entity ID");

        txtMarketEntityID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarketEntityID1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(jLabel19)
                        .addComponent(cbxStocks1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                            .addComponent(btnBidTest, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                            .addComponent(btnOfferTest, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel18)
                    .addComponent(jLabel20)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtMarketEntityID1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNumShares1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cbxMarketType1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrice1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxStocks1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMarketEntityID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addGap(2, 2, 2)
                .addComponent(txtNumShares1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxMarketType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBidTest)
                    .addComponent(btnOfferTest))
                .addGap(25, 25, 25))
        );

        label11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label11.setText("Bids");

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnMarketQuote1.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketQuote1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketQuote1.setText("Market Quote");

        btnMarketDepth1.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketDepth1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketDepth1.setText("Market Depth");

        btnMarketMatchedAttempt1.setBackground(new java.awt.Color(0, 255, 0));
        btnMarketMatchedAttempt1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMarketMatchedAttempt1.setText("Market Matched Attempt");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnMarketMatchedAttempt1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
            .addComponent(btnMarketDepth1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnMarketQuote1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnMarketQuote1)
                .addGap(18, 18, 18)
                .addComponent(btnMarketDepth1)
                .addGap(18, 18, 18)
                .addComponent(btnMarketMatchedAttempt1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1430, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9)))
                .addGap(576, 576, 576))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2721, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1171, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("Order List", jPanel6);

        jTabbedPane1.addTab("Matching Engine Test", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 2726, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBidActionPerformed

    private void txtNumSharesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumSharesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumSharesActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOfferActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOfferActionPerformed

    private void txtMarketEntityIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarketEntityIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarketEntityIDActionPerformed

    private void txtLengthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLengthKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtLengthKeyTyped

    private void txtStandardDeviationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStandardDeviationKeyTyped
        char c = evt.getKeyChar();
        if ((!(Character.isDigit(c)) && c != KeyEvent.VK_PERIOD && c != KeyEvent.VK_MINUS) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtStandardDeviationKeyTyped

    private void txtBasePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBasePriceKeyTyped
        char c = evt.getKeyChar();
        if ((!(Character.isDigit(c)) && c != KeyEvent.VK_PERIOD && c != KeyEvent.VK_MINUS) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtBasePriceKeyTyped

    private void txtStandardFactorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStandardFactorKeyTyped
        char c = evt.getKeyChar();
        if ((!(Character.isDigit(c)) && c != KeyEvent.VK_PERIOD && c != KeyEvent.VK_MINUS) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtStandardFactorKeyTyped

    private void txtPriceVarianceBPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceVarianceBPKeyTyped
        char c = evt.getKeyChar();
        if ((!(Character.isDigit(c)) && c != KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceVarianceBPKeyTyped

    private void txtMinIntervalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinIntervalKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMinIntervalKeyTyped

    private void txtMaxIntervalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaxIntervalKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMaxIntervalKeyTyped

    private void cbxMinNumberOfSharesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxMinNumberOfSharesKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cbxMinNumberOfSharesKeyTyped

    private void cbxMaxNumberOfSharesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxMaxNumberOfSharesKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cbxMaxNumberOfSharesKeyTyped

    private void txtNumSharesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumSharesKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (Character.isWhitespace(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumSharesKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        char c = evt.getKeyChar();
        if ((!(Character.isDigit(c)) && c != KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void btnBidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBidMouseClicked
        String id = txtMarketEntityID.getText();
        String stockName = cbxStocks.getSelectedItem().toString();
        String marketType = cbxMarketType.getSelectedItem().toString();

        String ns = txtNumShares.getText();
        String p = txtPrice.getText();

        if (p.equals("") || ns.equals("") || id.equals("")) {
            MessageBox.infoBox("Please fill in all fields", "Bid not accepted");
            return;
        }

        if (!Number.isDouble(p) || !Number.isInteger(ns)) {
            MessageBox.infoBox("Shares should be an integer and price a decimal value.", "Bid not accepted");
            return;
        }

        int numOfShares = Integer.parseInt(txtNumShares.getText());
        double price = Double.parseDouble(txtPrice.getText());

        if (numOfShares <= 0 || price <= 0) {
            MessageBox.infoBox("Please use only positive values", "Bid not accepted");
            return;
        }

        String side = "bid";

        MessageBox.infoBox(numOfShares + "\n" + price + "\n" + marketType + "\n" + stockName + "\n" + id + "\n" + side, "Checking if it works");

        //Make an bid here with the interface object
    }//GEN-LAST:event_btnBidMouseClicked

    private void btnOfferMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOfferMouseClicked
        String id = txtMarketEntityID.getText();
        String stockName = cbxStocks.getSelectedItem().toString();
        String marketType = cbxMarketType.getSelectedItem().toString();

        String ns = txtNumShares.getText();
        String p = txtPrice.getText();

        if (p.equals("") || ns.equals("") || id.equals("")) {
            MessageBox.infoBox("Please fill in all fields", "Offer not accepted");
            return;
        }

        if (!Number.isDouble(p) || !Number.isInteger(ns)) {
            MessageBox.infoBox("Shares should be an integer and price a decimal value.", "Offer not accepted");
            return;
        }

        int numOfShares = Integer.parseInt(txtNumShares.getText());
        double price = Double.parseDouble(txtPrice.getText());

        if (numOfShares <= 0 || price <= 0) {
            MessageBox.infoBox("Please use only positive values", "Offer not accepted");
            return;
        }

        String side = "offer";

        MessageBox.infoBox(numOfShares + "\n" + price + "\n" + marketType + "\n" + stockName + "\n" + id + "\n" + side, "Checking if it works");

        //Make an offer here with the interface object
    }//GEN-LAST:event_btnOfferMouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        double closePrice = Double.parseDouble(txtUpdateClosePrice.getText());

        //do something with the close price 
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        double index = Double.parseDouble(txtUpdateIndex.getText());

        //do something with the index
    }//GEN-LAST:event_jButton12MouseClicked

    private void txtUpdateClosePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUpdateClosePriceKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (Character.isWhitespace(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtUpdateClosePriceKeyTyped

    private void txtUpdateIndexKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUpdateIndexKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (Character.isWhitespace(c))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtUpdateIndexKeyTyped

    private void btnCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseClicked
        String stock = txtStockName.getText();
        String standardDeviation = txtStandardDeviation.getText();
        String basePrice = txtBasePrice.getText();
        String standardFactor = txtStandardFactor.getText();
        String minimumInterval = txtMinInterval.getText();
        String maximumInterval = txtMaxInterval.getText();
        String minNoOfShares = cbxMinNumberOfShares.getValue().toString();
        String maxNoOfShares = cbxMaxNumberOfShares.getValue().toString();
        String priceVarianceBP = txtPriceVarianceBP.getText();
        String length = txtLength.getText();

        if (stock.equals("") || standardDeviation.equals("") || basePrice.equals("") || standardFactor.equals("") || minimumInterval.equals("") || maximumInterval.equals("") || minNoOfShares.equals("") || maxNoOfShares.equals("") || priceVarianceBP.equals("") || length.equals("")) {
            MessageBox.infoBox("Please ensure all fields are not empty.", "Empty field");
            return;
        }

        if (!Number.isDouble(standardDeviation) || !Number.isDouble(basePrice) || !Number.isDouble(standardFactor) || !Number.isInteger(minimumInterval) || !Number.isInteger(maximumInterval) || !Number.isInteger(maxNoOfShares) || !Number.isInteger(minNoOfShares) || !Number.isDouble(priceVarianceBP) || !Number.isInteger(length)) {
            MessageBox.infoBox("Please ensure all fields have the correct number format.", "Incorrect Number Format");
            return;
        }

        double stdDev = Double.parseDouble(standardDeviation);
        double bp = Double.parseDouble(basePrice);
        double sf = Double.parseDouble(standardFactor);
        double minI = Integer.parseInt(minimumInterval);
        double maxI = Integer.parseInt(maximumInterval);
        double minShares = Integer.parseInt(minNoOfShares);
        double maxShares = Integer.parseInt(maxNoOfShares);
        double pvbp = Double.parseDouble(priceVarianceBP);
        double len = Integer.parseInt(length);

        if (len < 0 || minShares <= 0 || maxShares <= 0 || minI <= 0 || maxI <= 0 || pvbp < 0) {
            MessageBox.infoBox("Some fields may not have negative values.", "Negative Value Detected");
            return;
        }

        if ((minShares > maxShares) || (minI > maxI)) {
            MessageBox.infoBox("All maximum values should be greater than minimum values.", "Size inconsistency");
            return;
        }

        //do something with the data
    }//GEN-LAST:event_btnCreateMouseClicked

    private void btnBidTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBidTestMouseClicked
        String id = txtMarketEntityID1.getText();
        String stockName = cbxStocks1.getSelectedItem().toString();
        String marketType = cbxMarketType1.getSelectedItem().toString();

        String ns = txtNumShares1.getText();
        String p = txtPrice1.getText();

        if (p.equals("") || ns.equals("") || id.equals("")) {
            MessageBox.infoBox("Please fill in all fields", "Offer not accepted");
            return;
        }

        if (!Number.isDouble(p) || !Number.isInteger(ns)) {
            MessageBox.infoBox("Shares should be an integer and price a decimal value.", "Offer not accepted");
            return;
        }

        int numOfShares = Integer.parseInt(txtNumShares1.getText());
        double price = Double.parseDouble(txtPrice1.getText());

        if (numOfShares <= 0 || price <= 0) {
            MessageBox.infoBox("Please use only positive values", "Offer not accepted");
            return;
        }

        MarketEntryAttempt marketEntryAttempt = new MarketEntryAttempt(price, numOfShares, id, MarketEntryAttempt.SIDE.BID);

        try {
            if (!fmse.placeMarketEntryAttempt(marketEntryAttempt, stockName)) {
                MessageBox.infoBox("Market Entry Attempt could not be placed", "Market Attempt Entry Failed");
                return;
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(FMSimulator.class.getName()).log(Level.SEVERE, null, ex);
        } finally {

            MarketEntryAttemptBook book = fmse.getOrderBook(stockName);

            Vector bidsVec = book.getBids();
            Vector offersVec = book.getOffers();
            Vector matchedVec = book.getMatchedOrders();

            if (bidsVec.equals(null) || offersVec.equals(null) || matchedVec.equals(null)) {
                MessageBox.infoBox("Market Entry Attempt could not be placed", "Market Attempt Entry Failed");
                return;
            }

            String[] cols = {"Market Entity", "Shares", "Price"};

            Object[][] tmpBids = new Object[bidsVec.size()][3];
            for (int i = 0; i < bidsVec.size(); i++) {
                MarketEntryAttempt attempt = (MarketEntryAttempt) bidsVec.elementAt(i);
                tmpBids[i][0] = attempt.getParticipantName();
                tmpBids[i][1] = attempt.getNumOfShares();
                tmpBids[i][2] = attempt.getPrice();

            }
            BidsTableTest.setModel(new DefaultTableModel(tmpBids, cols));


            Object[][] tmpOffers = new Object[offersVec.size()][3];
            for (int i = 0; i < offersVec.size(); i++) {
                MarketEntryAttempt attempt = (MarketEntryAttempt) offersVec.elementAt(i);
                tmpOffers[i][0] = attempt.getParticipantName();
                tmpOffers[i][1] = attempt.getNumOfShares();
                tmpOffers[i][2] = attempt.getPrice();
            }
            OffersTableTest.setModel(new DefaultTableModel(tmpOffers, cols));

            cols[2] = "Date";
            Object[][] tmpMatched = new Object[matchedVec.size()][3];
            for (int i = 0; i < matchedVec.size(); i++) {
                MatchedMarketEntryAttempt attempt = (MatchedMarketEntryAttempt) matchedVec.elementAt(i);
                tmpMatched[i][0] = attempt.getDateIssued();
                tmpMatched[i][1] = attempt.getQuantity();
                tmpMatched[i][2] = attempt.getPrice();
            }
            MatchedTableTest.setModel(new DefaultTableModel(tmpMatched, cols));
        }
    }//GEN-LAST:event_btnBidTestMouseClicked

    private void btnBidTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBidTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBidTestActionPerformed

    private void txtNumShares1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumShares1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumShares1ActionPerformed

    private void txtNumShares1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumShares1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumShares1KeyTyped

    private void txtPrice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrice1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrice1ActionPerformed

    private void txtPrice1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrice1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrice1KeyTyped

    private void btnOfferTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOfferTestMouseClicked
        String id = txtMarketEntityID1.getText();
        String stockName = cbxStocks1.getSelectedItem().toString();
        String marketType = cbxMarketType1.getSelectedItem().toString();

        String ns = txtNumShares1.getText();
        String p = txtPrice1.getText();

        if (p.equals("") || ns.equals("") || id.equals("")) {
            MessageBox.infoBox("Please fill in all fields", "Offer not accepted");
            return;
        }

        if (!Number.isDouble(p) || !Number.isInteger(ns)) {
            MessageBox.infoBox("Shares should be an integer and price a decimal value.", "Offer not accepted");
            return;
        }

        int numOfShares = Integer.parseInt(txtNumShares1.getText());
        double price = Double.parseDouble(txtPrice1.getText());

        if (numOfShares <= 0 || price <= 0) {
            MessageBox.infoBox("Please use only positive values", "Offer not accepted");
            return;
        }

        MarketEntryAttempt marketEntryAttempt = new MarketEntryAttempt(price, numOfShares, id, MarketEntryAttempt.SIDE.OFFER);

        try {
            if (!fmse.placeMarketEntryAttempt(marketEntryAttempt, stockName)) {
                MessageBox.infoBox("Market Entry Attempt could not be placed", "Market Attempt Entry Failed");
                return;
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(FMSimulator.class.getName()).log(Level.SEVERE, null, ex);
        } finally {

            MarketEntryAttemptBook book = fmse.getOrderBook(stockName);

            Vector bidsVec = book.getBids();
            Vector offersVec = book.getOffers();
            Vector matchedVec = book.getMatchedOrders();

            if (bidsVec.equals(null) || offersVec.equals(null) || matchedVec.equals(null)) {
                MessageBox.infoBox("Market Entry Attempt could not be placed", "Market Attempt Entry Failed");
                return;
            }

            String[] cols = {"Market Entity", "Shares", "Price"};

            Object[][] tmpBids = new Object[bidsVec.size()][3];
            for (int i = 0; i < bidsVec.size(); i++) {
                MarketEntryAttempt attempt = (MarketEntryAttempt) bidsVec.elementAt(i);
                tmpBids[i][0] = attempt.getParticipantName();
                tmpBids[i][1] = attempt.getNumOfShares();
                tmpBids[i][2] = attempt.getPrice();

            }
            BidsTableTest.setModel(new DefaultTableModel(tmpBids, cols));


            Object[][] tmpOffers = new Object[offersVec.size()][3];
            for (int i = 0; i < offersVec.size(); i++) {
                MarketEntryAttempt attempt = (MarketEntryAttempt) offersVec.elementAt(i);
                tmpOffers[i][0] = attempt.getParticipantName();
                tmpOffers[i][1] = attempt.getNumOfShares();
                tmpOffers[i][2] = attempt.getPrice();
            }
            OffersTableTest.setModel(new DefaultTableModel(tmpOffers, cols));

            cols[2] = "Date";
            Object[][] tmpMatched = new Object[matchedVec.size()][3];
            for (int i = 0; i < matchedVec.size(); i++) {
                MatchedMarketEntryAttempt attempt = (MatchedMarketEntryAttempt) matchedVec.elementAt(i);
                tmpMatched[i][0] = attempt.getDateIssued();
                tmpMatched[i][1] = attempt.getQuantity();
                tmpMatched[i][2] = attempt.getPrice();
            }
            MatchedTableTest.setModel(new DefaultTableModel(tmpMatched, cols));
        }
    }//GEN-LAST:event_btnOfferTestMouseClicked

    private void btnOfferTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOfferTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOfferTestActionPerformed

    private void txtMarketEntityID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarketEntityID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarketEntityID1ActionPerformed

    private void cbxStocks1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxStocks1ItemStateChanged
        String stockName = cbxStocks1.getSelectedItem().toString();
        MarketEntryAttemptBook book = fmse.getOrderBook(stockName);

        Vector bidsVec = book.getBids();
        Vector offersVec = book.getOffers();
        Vector matchedVec = book.getMatchedOrders();

        if (bidsVec.equals(null) || offersVec.equals(null) || matchedVec.equals(null)) {
            MessageBox.infoBox("Market Entry Attempt could not be placed", "Market Attempt Entry Failed");
            return;
        }

        String[] cols = {"Market Entity", "Shares", "Price"};

        Object[][] tmpBids = new Object[bidsVec.size()][3];
        for (int i = 0; i < bidsVec.size(); i++) {
            MarketEntryAttempt attempt = (MarketEntryAttempt) bidsVec.elementAt(i);
            tmpBids[i][0] = attempt.getParticipantName();
            tmpBids[i][1] = attempt.getNumOfShares();
            tmpBids[i][2] = attempt.getPrice();

        }
        BidsTableTest.setModel(new DefaultTableModel(tmpBids, cols));


        Object[][] tmpOffers = new Object[offersVec.size()][3];
        for (int i = 0; i < offersVec.size(); i++) {
            MarketEntryAttempt attempt = (MarketEntryAttempt) offersVec.elementAt(i);
            tmpOffers[i][0] = attempt.getParticipantName();
            tmpOffers[i][1] = attempt.getNumOfShares();
            tmpOffers[i][2] = attempt.getPrice();
        }
        OffersTableTest.setModel(new DefaultTableModel(tmpOffers, cols));

        cols[2] = "Date";
        Object[][] tmpMatched = new Object[matchedVec.size()][3];
        for (int i = 0; i < matchedVec.size(); i++) {
            MatchedMarketEntryAttempt attempt = (MatchedMarketEntryAttempt) matchedVec.elementAt(i);
            tmpMatched[i][0] = attempt.getDateIssued();
            tmpMatched[i][1] = attempt.getQuantity();
            tmpMatched[i][2] = attempt.getPrice();
        }
        MatchedTableTest.setModel(new DefaultTableModel(tmpMatched, cols));
    }//GEN-LAST:event_cbxStocks1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMSimulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FMSimulator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BidsTableTest;
    private javax.swing.JTable MatchedTableTest;
    private javax.swing.JTable Offers2;
    private javax.swing.JTable Offers4;
    private javax.swing.JTable Offers5;
    private javax.swing.JTable OffersTableTest;
    private javax.swing.JButton btnBid;
    private javax.swing.JButton btnBidTest;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMarketDepth;
    private javax.swing.JButton btnMarketDepth1;
    private javax.swing.JButton btnMarketMatchedAttempt;
    private javax.swing.JButton btnMarketMatchedAttempt1;
    private javax.swing.JButton btnMarketQuote;
    private javax.swing.JButton btnMarketQuote1;
    private javax.swing.JButton btnOffer;
    private javax.swing.JButton btnOfferTest;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox cbxMarketType;
    private javax.swing.JComboBox cbxMarketType1;
    private javax.swing.JSpinner cbxMaxNumberOfShares;
    private javax.swing.JSpinner cbxMinNumberOfShares;
    private javax.swing.JComboBox cbxStocks;
    private javax.swing.JComboBox cbxStocks1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JTextField txtBasePrice;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtMarketEntityID;
    private javax.swing.JTextField txtMarketEntityID1;
    private javax.swing.JTextField txtMaxInterval;
    private javax.swing.JTextField txtMinInterval;
    private javax.swing.JTextField txtNumShares;
    private javax.swing.JTextField txtNumShares1;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPrice1;
    private javax.swing.JTextField txtPriceVarianceBP;
    private javax.swing.JTextField txtStandardDeviation;
    private javax.swing.JTextField txtStandardFactor;
    private javax.swing.JTextField txtStockName;
    private javax.swing.JTextField txtUpdateClosePrice;
    private javax.swing.JTextField txtUpdateIndex;
    // End of variables declaration//GEN-END:variables
}
